{"version":3,"sources":["C:\\Users\\tiama\\Desktop\\Coding\\endurorevamp\\lib\\auth\\server.ts"],"sourcesContent":["import { createClient } from '@/lib/supabase/server'\r\nimport { redirect } from 'next/navigation'\r\nimport { User } from '@supabase/supabase-js'\r\n\r\n/**\r\n * Get the current user on the server side\r\n * Returns null if not authenticated\r\n */\r\nexport async function getUser(): Promise<User | null> {\r\n  const supabase = await createClient()\r\n  const { data: { user } } = await supabase.auth.getUser()\r\n  return user\r\n}\r\n\r\n/**\r\n * Require authentication on the server side\r\n * Redirects to login if not authenticated\r\n */\r\nexport async function requireAuth(): Promise<User> {\r\n  const user = await getUser()\r\n  \r\n  if (!user) {\r\n    redirect('/auth/login')\r\n  }\r\n  \r\n  return user\r\n}\r\n\r\n/**\r\n * Get user and redirect to dashboard if already authenticated\r\n * Useful for auth pages (login/signup)\r\n */\r\nexport async function redirectIfAuthenticated(): Promise<void> {\r\n  const user = await getUser()\r\n  \r\n  if (user) {\r\n    redirect('/dashboard')\r\n  }\r\n} "],"names":["getUser","redirectIfAuthenticated","requireAuth","supabase","createClient","data","user","auth","redirect"],"mappings":";;;;;;;;;;;IAQsBA,OAAO;eAAPA;;IAwBAC,uBAAuB;eAAvBA;;IAdAC,WAAW;eAAXA;;;wBAlBO;4BACJ;AAOlB,eAAeF;IACpB,MAAMG,WAAW,MAAMC,IAAAA,oBAAY;IACnC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAE,EAAE,GAAG,MAAMH,SAASI,IAAI,CAACP,OAAO;IACtD,OAAOM;AACT;AAMO,eAAeJ;IACpB,MAAMI,OAAO,MAAMN;IAEnB,IAAI,CAACM,MAAM;QACTE,IAAAA,oBAAQ,EAAC;IACX;IAEA,OAAOF;AACT;AAMO,eAAeL;IACpB,MAAMK,OAAO,MAAMN;IAEnB,IAAIM,MAAM;QACRE,IAAAA,oBAAQ,EAAC;IACX;AACF"}