{"version":3,"sources":["C:\\Users\\tiama\\Desktop\\Coding\\endurorevamp\\hooks\\strava\\useStravaToken.ts"],"sourcesContent":["import { useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { useCallback } from 'react';\r\nimport { useAuth } from '@/providers/AuthProvider';\r\nimport { StravaAuth } from '@/lib/strava/auth';\r\nimport { STRAVA_CONNECTION_QUERY_KEY } from './useStravaConnection';\r\n\r\nexport interface UseStravaTokenReturn {\r\n  accessToken: string | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  refreshToken: () => Promise<void>;\r\n}\r\n\r\nconst STRAVA_TOKEN_QUERY_KEY = 'strava-token';\r\n\r\n/**\r\n * Hook to get and manage the valid Strava access token\r\n * Uses React Query for better caching and state management\r\n */\r\nexport function useStravaToken(): UseStravaTokenReturn {\r\n  const { user } = useAuth();\r\n  const queryClient = useQueryClient();\r\n\r\n  const {\r\n    data: accessToken,\r\n    isLoading,\r\n    error: queryError,\r\n    refetch,\r\n  } = useQuery({\r\n    queryKey: [STRAVA_TOKEN_QUERY_KEY, user?.id],\r\n    queryFn: async () => {\r\n      if (!user) return null;\r\n      \r\n      const stravaAuth = new StravaAuth(false);\r\n      return await stravaAuth.getValidAccessToken(user.id);\r\n    },\r\n    enabled: !!user,\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    gcTime: 10 * 60 * 1000, // 10 minutes\r\n  });\r\n\r\n  const refreshToken = useCallback(async () => {\r\n    await queryClient.invalidateQueries({ \r\n      queryKey: [STRAVA_TOKEN_QUERY_KEY, user?.id] \r\n    });\r\n    // Also invalidate connection status since token changes affect connection\r\n    await queryClient.invalidateQueries({ \r\n      queryKey: [STRAVA_CONNECTION_QUERY_KEY, user?.id] \r\n    });\r\n    await refetch();\r\n  }, [queryClient, user?.id, refetch]);\r\n\r\n  const error = queryError ? \r\n    (queryError instanceof Error ? queryError.message : 'Failed to get access token') : \r\n    null;\r\n\r\n  return {\r\n    accessToken: accessToken || null,\r\n    isLoading,\r\n    error,\r\n    refreshToken,\r\n  };\r\n}\r\n\r\n// Export the query key for use in other hooks\r\nexport { STRAVA_TOKEN_QUERY_KEY }; "],"names":["STRAVA_TOKEN_QUERY_KEY","useStravaToken","user","useAuth","queryClient","useQueryClient","data","accessToken","isLoading","error","queryError","refetch","useQuery","queryKey","id","queryFn","stravaAuth","StravaAuth","getValidAccessToken","enabled","staleTime","gcTime","refreshToken","useCallback","invalidateQueries","STRAVA_CONNECTION_QUERY_KEY","Error","message"],"mappings":";;;;;;;;;;;IAiESA,sBAAsB;eAAtBA;;IA9COC,cAAc;eAAdA;;;4BAnByB;uBACb;8BACJ;sBACG;qCACiB;AAS5C,MAAMD,yBAAyB;AAMxB,SAASC;IACd,MAAM,EAAEC,IAAI,EAAE,GAAGC,IAAAA,qBAAO;IACxB,MAAMC,cAAcC,IAAAA,0BAAc;IAElC,MAAM,EACJC,MAAMC,WAAW,EACjBC,SAAS,EACTC,OAAOC,UAAU,EACjBC,OAAO,EACR,GAAGC,IAAAA,oBAAQ,EAAC;QACXC,UAAU;YAACb;YAAwBE,MAAMY;SAAG;QAC5CC,SAAS;YACP,IAAI,CAACb,MAAM,OAAO;YAElB,MAAMc,aAAa,IAAIC,gBAAU,CAAC;YAClC,OAAO,MAAMD,WAAWE,mBAAmB,CAAChB,KAAKY,EAAE;QACrD;QACAK,SAAS,CAAC,CAACjB;QACXkB,WAAW,IAAI,KAAK;QACpBC,QAAQ,KAAK,KAAK;IACpB;IAEA,MAAMC,eAAeC,IAAAA,kBAAW,EAAC;QAC/B,MAAMnB,YAAYoB,iBAAiB,CAAC;YAClCX,UAAU;gBAACb;gBAAwBE,MAAMY;aAAG;QAC9C;QACA,0EAA0E;QAC1E,MAAMV,YAAYoB,iBAAiB,CAAC;YAClCX,UAAU;gBAACY,gDAA2B;gBAAEvB,MAAMY;aAAG;QACnD;QACA,MAAMH;IACR,GAAG;QAACP;QAAaF,MAAMY;QAAIH;KAAQ;IAEnC,MAAMF,QAAQC,aACXA,sBAAsBgB,QAAQhB,WAAWiB,OAAO,GAAG,+BACpD;IAEF,OAAO;QACLpB,aAAaA,eAAe;QAC5BC;QACAC;QACAa;IACF;AACF"}