{"version":3,"sources":["C:\\Users\\tiama\\Desktop\\Coding\\endurorevamp\\components\\dashboard\\LastActivityDeepDive.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Badge } from '@/components/ui/badge'\r\nimport { Progress } from '@/components/ui/progress'\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\r\nimport { Button } from '@/components/ui/button'\r\nimport { useUserActivities } from '@/hooks/use-user-activities'\r\nimport { useUnitPreferences } from '@/hooks/useUnitPreferences'\r\nimport { formatDistance, formatPace } from '@/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport Link from 'next/link'\r\nimport {\r\n  Calendar,\r\n  Timer,\r\n  MapPin,\r\n  Heart,\r\n  Zap,\r\n  TrendingUp,\r\n  Trophy,\r\n  Target,\r\n  Activity as ActivityIcon,\r\n  Clock,\r\n  Mountain,\r\n  ArrowRight\r\n} from 'lucide-react'\r\n\r\ninterface LastActivityDeepDiveProps {\r\n  userId: string\r\n}\r\n\r\nexport function LastActivityDeepDive({ userId }: LastActivityDeepDiveProps) {\r\n  const { data: activities, isLoading, error } = useUserActivities(userId)\r\n  const { preferences } = useUnitPreferences()\r\n\r\n  const lastActivity = useMemo(() => {\r\n    if (!activities || activities.length === 0) return null\r\n    return activities.sort((a, b) => \r\n      new Date(b.start_date).getTime() - new Date(a.start_date).getTime()\r\n    )[0]\r\n  }, [activities])\r\n\r\n  const activityAnalysis = useMemo(() => {\r\n    if (!lastActivity || !activities) return null\r\n\r\n    // Compare with previous activities of same type\r\n    const sameTypeActivities = activities\r\n      .filter(a => a.sport_type === lastActivity.sport_type)\r\n      .sort((a, b) => new Date(b.start_date).getTime() - new Date(a.start_date).getTime())\r\n\r\n    const previousActivity = sameTypeActivities[1] // Second most recent of same type\r\n    const avgDistance = sameTypeActivities.reduce((sum, a) => sum + a.distance, 0) / sameTypeActivities.length\r\n\r\n    // Performance analysis\r\n    const currentPace = lastActivity.moving_time / (lastActivity.distance / 1000) // seconds per km\r\n    const paceImprovement = previousActivity ? ((previousActivity.moving_time / (previousActivity.distance / 1000)) - currentPace) : 0\r\n    const distanceImprovement = previousActivity ? (lastActivity.distance - previousActivity.distance) : 0\r\n\r\n    // Effort zones (simplified)\r\n    const avgSpeed = lastActivity.distance / lastActivity.moving_time // m/s\r\n    const maxSpeed = lastActivity.max_speed || avgSpeed * 1.5\r\n    const effortLevel = Math.min(100, (avgSpeed / (maxSpeed * 0.8)) * 100)\r\n\r\n    return {\r\n      previousActivity,\r\n      avgDistance,\r\n      currentPace,\r\n      paceImprovement,\r\n      distanceImprovement,\r\n      effortLevel,\r\n      isPersonalBest: lastActivity.distance > avgDistance * 1.1,\r\n      totalActivitiesOfType: sameTypeActivities.length\r\n    }\r\n  }, [lastActivity, activities])\r\n\r\n  // Helper functions\r\n  const formatDistanceWithUnits = (meters: number): string => {\r\n    return formatDistance(meters, preferences.distance)\r\n  }\r\n\r\n  const formatDuration = (seconds: number): string => {\r\n    const hours = Math.floor(seconds / 3600)\r\n    const minutes = Math.floor((seconds % 3600) / 60)\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes}m`\r\n    }\r\n    return `${minutes}m`\r\n  }\r\n\r\n  const formatPaceWithUnits = (secondsPerKm: number): string => {\r\n    return formatPace(secondsPerKm, preferences.pace)\r\n  }\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    const date = new Date(dateString)\r\n    const now = new Date()\r\n    const diffTime = Math.abs(now.getTime() - date.getTime())\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))\r\n    \r\n    if (diffDays === 0) return 'Today'\r\n    if (diffDays === 1) return 'Yesterday'\r\n    if (diffDays < 7) return `${diffDays} days ago`\r\n    \r\n    return date.toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric'\r\n    })\r\n  }\r\n\r\n  const getActivityIcon = (sportType: string) => {\r\n    switch (sportType.toLowerCase()) {\r\n      case 'run': return '🏃‍♂️'\r\n      case 'ride': return '🚴‍♂️'\r\n      case 'swim': return '🏊‍♂️'\r\n      case 'hike': return '🥾'\r\n      case 'walk': return '🚶‍♂️'\r\n      default: return '💪'\r\n    }\r\n  }\r\n\r\n  const getActivityColor = (sportType: string): string => {\r\n    switch (sportType.toLowerCase()) {\r\n      case 'run': return 'bg-green-100 text-green-800 border-green-200'\r\n      case 'ride': return 'bg-blue-100 text-blue-800 border-blue-200'\r\n      case 'swim': return 'bg-cyan-100 text-cyan-800 border-cyan-200'\r\n      case 'hike': return 'bg-orange-100 text-orange-800 border-orange-200'\r\n      case 'walk': return 'bg-yellow-100 text-yellow-800 border-yellow-200'\r\n      default: return 'bg-gray-100 text-gray-800 border-gray-200'\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Last Activity Deep Dive</CardTitle>\r\n          <CardDescription>Loading your latest activity analysis...</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"animate-pulse space-y-4\">\r\n            <div className=\"h-20 bg-gray-100 rounded-lg\"></div>\r\n            <div className=\"h-40 bg-gray-100 rounded-lg\"></div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  if (error || !lastActivity) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Last Activity Deep Dive</CardTitle>\r\n          <CardDescription>\r\n            {error ? 'Error loading activity data' : 'No activities found'}\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            <ActivityIcon className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n            <p>Connect your Strava account to see detailed activity insights</p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <div className=\"flex items-start justify-between\">\r\n          <div>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <span className=\"text-2xl\">{getActivityIcon(lastActivity.sport_type)}</span>\r\n              Last Activity Deep Dive\r\n            </CardTitle>\r\n            <CardDescription>\r\n              Detailed analysis of your most recent workout\r\n            </CardDescription>\r\n          </div>\r\n          <Link href=\"/dashboard/analytics#activity-feed\" scroll={true}>\r\n            <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\r\n              <ActivityIcon className=\"h-4 w-4\" />\r\n              View All Activities\r\n              <ArrowRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Tabs defaultValue=\"overview\" className=\"w-full\">\r\n          <TabsList className=\"grid w-full grid-cols-3\">\r\n            <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n            <TabsTrigger value=\"performance\">Performance</TabsTrigger>\r\n            <TabsTrigger value=\"insights\">Insights</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"overview\" className=\"space-y-6\">\r\n            {/* Activity Header */}\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"space-y-2\">\r\n                <h3 className=\"text-xl font-semibold\">{lastActivity.name}</h3>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Badge className={getActivityColor(lastActivity.sport_type)}>\r\n                    {lastActivity.sport_type}\r\n                  </Badge>\r\n                  {activityAnalysis?.isPersonalBest && (\r\n                    <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800\">\r\n                      <Trophy className=\"h-3 w-3 mr-1\" />\r\n                      Personal Best!\r\n                    </Badge>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"text-right text-sm text-gray-500\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <Calendar className=\"h-4 w-4\" />\r\n                  {formatDate(lastActivity.start_date)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Key Stats Grid */}\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <div className=\"flex items-center gap-2 mb-1\">\r\n                  <MapPin className=\"h-4 w-4 text-gray-500\" />\r\n                  <span className=\"text-sm text-gray-600\">Distance</span>\r\n                </div>\r\n                <div className=\"text-2xl font-bold\">{formatDistanceWithUnits(lastActivity.distance)}</div>\r\n              </div>\r\n\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <div className=\"flex items-center gap-2 mb-1\">\r\n                  <Timer className=\"h-4 w-4 text-gray-500\" />\r\n                  <span className=\"text-sm text-gray-600\">Duration</span>\r\n                </div>\r\n                <div className=\"text-2xl font-bold\">{formatDuration(lastActivity.moving_time)}</div>\r\n              </div>\r\n\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <div className=\"flex items-center gap-2 mb-1\">\r\n                  <Clock className=\"h-4 w-4 text-gray-500\" />\r\n                  <span className=\"text-sm text-gray-600\">Avg Pace</span>\r\n                </div>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {activityAnalysis ? formatPaceWithUnits(activityAnalysis.currentPace) : 'N/A'}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <div className=\"flex items-center gap-2 mb-1\">\r\n                  <Mountain className=\"h-4 w-4 text-gray-500\" />\r\n                  <span className=\"text-sm text-gray-600\">Elevation</span>\r\n                </div>\r\n                <div className=\"text-2xl font-bold\">{Math.round(lastActivity.total_elevation_gain || 0)}m</div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Additional Stats */}\r\n            {(lastActivity.average_heartrate || lastActivity.average_watts) && (\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                {lastActivity.average_heartrate && (\r\n                  <div className=\"bg-red-50 p-4 rounded-lg border border-red-100\">\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      <Heart className=\"h-4 w-4 text-red-500\" />\r\n                      <span className=\"text-sm text-red-700\">Heart Rate</span>\r\n                    </div>\r\n                    <div className=\"text-xl font-bold text-red-800\">\r\n                      {Math.round(lastActivity.average_heartrate)} bpm\r\n                    </div>\r\n                    {lastActivity.max_heartrate && (\r\n                      <div className=\"text-sm text-red-600\">\r\n                        Max: {Math.round(lastActivity.max_heartrate)} bpm\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {lastActivity.average_watts && (\r\n                  <div className=\"bg-yellow-50 p-4 rounded-lg border border-yellow-100\">\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      <Zap className=\"h-4 w-4 text-yellow-500\" />\r\n                      <span className=\"text-sm text-yellow-700\">Power</span>\r\n                    </div>\r\n                    <div className=\"text-xl font-bold text-yellow-800\">\r\n                      {Math.round(lastActivity.average_watts)}W\r\n                    </div>\r\n                    {lastActivity.max_watts && (\r\n                      <div className=\"text-sm text-yellow-600\">\r\n                        Max: {Math.round(lastActivity.max_watts)}W\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"performance\" className=\"space-y-6\">\r\n            {activityAnalysis && (\r\n              <>\r\n                {/* Performance Comparison */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-semibold\">Performance vs Previous {lastActivity.sport_type}</h4>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"text-sm text-gray-600\">Distance Change</span>\r\n                        <TrendingUp className={`h-4 w-4 ${activityAnalysis.distanceImprovement >= 0 ? 'text-green-500' : 'text-red-500'}`} />\r\n                      </div>\r\n                      <div className={`text-lg font-bold ${activityAnalysis.distanceImprovement >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                        {activityAnalysis.distanceImprovement >= 0 ? '+' : ''}{formatDistanceWithUnits(activityAnalysis.distanceImprovement)}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"text-sm text-gray-600\">Pace Change</span>\r\n                        <TrendingUp className={`h-4 w-4 ${activityAnalysis.paceImprovement >= 0 ? 'text-green-500' : 'text-red-500'}`} />\r\n                      </div>\r\n                      <div className={`text-lg font-bold ${activityAnalysis.paceImprovement >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                        {activityAnalysis.paceImprovement >= 0 ? 'Faster' : 'Slower'} by {Math.abs(activityAnalysis.paceImprovement).toFixed(0)}s/km\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Effort Level */}\r\n                <div className=\"space-y-3\">\r\n                  <h4 className=\"font-semibold\">Effort Level</h4>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span>Estimated Effort</span>\r\n                      <span>{Math.round(activityAnalysis.effortLevel)}%</span>\r\n                    </div>\r\n                    <Progress value={activityAnalysis.effortLevel} className=\"h-2\" />\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      Based on your average speed relative to estimated maximum\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"insights\" className=\"space-y-6\">\r\n            {activityAnalysis && (\r\n              <>\r\n                {/* Activity Insights */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-semibold\">Activity Insights</h4>\r\n                  \r\n                  <div className=\"grid gap-4\">\r\n                    <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-100\">\r\n                      <div className=\"flex items-center gap-2 mb-2\">\r\n                        <Target className=\"h-4 w-4 text-blue-500\" />\r\n                        <span className=\"font-medium text-blue-800\">Activity Summary</span>\r\n                      </div>\r\n                      <p className=\"text-sm text-blue-700\">\r\n                        This was your {activityAnalysis.totalActivitiesOfType === 1 ? 'first' : `${activityAnalysis.totalActivitiesOfType}${getOrdinalSuffix(activityAnalysis.totalActivitiesOfType)}`} {lastActivity.sport_type.toLowerCase()} activity.\r\n                        {activityAnalysis.distanceImprovement > 1000 && ' Great distance improvement!'}\r\n                        {activityAnalysis.paceImprovement > 10 && ' Nice pace improvement!'}\r\n                        {activityAnalysis.isPersonalBest && ' This is a new personal best for distance!'}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"bg-green-50 p-4 rounded-lg border border-green-100\">\r\n                      <div className=\"flex items-center gap-2 mb-2\">\r\n                        <Trophy className=\"h-4 w-4 text-green-500\" />\r\n                        <span className=\"font-medium text-green-800\">Recommendations</span>\r\n                      </div>\r\n                      <ul className=\"text-sm text-green-700 space-y-1\">\r\n                        {activityAnalysis.effortLevel > 80 && (\r\n                          <li>• Consider a recovery day after this high-intensity session</li>\r\n                        )}\r\n                        {activityAnalysis.effortLevel < 50 && (\r\n                          <li>• This was a good recovery/easy pace session</li>\r\n                        )}\r\n                        {activityAnalysis.distanceImprovement > 2000 && (\r\n                          <li>• Great distance increase! Monitor how you feel for recovery</li>\r\n                        )}\r\n                        {lastActivity.total_elevation_gain && lastActivity.total_elevation_gain > 500 && (\r\n                          <li>• Solid elevation gain - great for building strength</li>\r\n                        )}\r\n                        <li>• Keep up the consistent training!</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Recovery Suggestion */}\r\n                <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-100\">\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <Clock className=\"h-4 w-4 text-orange-500\" />\r\n                    <span className=\"font-medium text-orange-800\">Recovery Time</span>\r\n                  </div>\r\n                  <p className=\"text-sm text-orange-700\">\r\n                    Based on this activity&apos;s intensity, consider waiting{' '}\r\n                    {activityAnalysis.effortLevel > 80 ? '24-48 hours' : \r\n                     activityAnalysis.effortLevel > 60 ? '12-24 hours' : '6-12 hours'}{' '}\r\n                    before your next high-intensity session.\r\n                  </p>\r\n                </div>\r\n              </>\r\n            )}\r\n          </TabsContent>\r\n        </Tabs>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n// Helper function for ordinal numbers\r\nfunction getOrdinalSuffix(num: number): string {\r\n  const j = num % 10\r\n  const k = num % 100\r\n  if (j === 1 && k !== 11) return 'st'\r\n  if (j === 2 && k !== 12) return 'nd'\r\n  if (j === 3 && k !== 13) return 'rd'\r\n  return 'th'\r\n} "],"names":["LastActivityDeepDive","userId","data","activities","isLoading","error","useUserActivities","preferences","useUnitPreferences","lastActivity","useMemo","length","sort","a","b","Date","start_date","getTime","activityAnalysis","sameTypeActivities","filter","sport_type","previousActivity","avgDistance","reduce","sum","distance","currentPace","moving_time","paceImprovement","distanceImprovement","avgSpeed","maxSpeed","max_speed","effortLevel","Math","min","isPersonalBest","totalActivitiesOfType","formatDistanceWithUnits","meters","formatDistance","formatDuration","seconds","hours","floor","minutes","formatPaceWithUnits","secondsPerKm","formatPace","pace","formatDate","dateString","date","now","diffTime","abs","diffDays","toLocaleDateString","month","day","getActivityIcon","sportType","toLowerCase","getActivityColor","Card","CardHeader","CardTitle","CardDescription","CardContent","div","className","ActivityIcon","p","span","Link","href","scroll","Button","variant","size","ArrowRight","Tabs","defaultValue","TabsList","TabsTrigger","value","TabsContent","h3","name","Badge","Trophy","Calendar","MapPin","Timer","Clock","Mountain","round","total_elevation_gain","average_heartrate","average_watts","Heart","max_heartrate","Zap","max_watts","h4","TrendingUp","toFixed","Progress","Target","getOrdinalSuffix","ul","li","num","j","k"],"mappings":"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"}