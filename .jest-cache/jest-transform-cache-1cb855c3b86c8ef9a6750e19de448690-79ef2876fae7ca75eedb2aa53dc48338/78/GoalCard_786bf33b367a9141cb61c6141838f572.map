{"version":3,"sources":["C:\\Users\\tiama\\Desktop\\Coding\\endurorevamp\\components\\goals\\GoalCard.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { UserGoal } from '@/types/goals';\r\nimport { \r\n  Target, \r\n  Calendar, \r\n  TrendingUp, \r\n  Edit, \r\n  CheckCircle, \r\n  MoreHorizontal,\r\n  Archive\r\n} from 'lucide-react';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from '@/components/ui/dropdown-menu';\r\n\r\ninterface GoalCardProps {\r\n  goal: UserGoal;\r\n  onEdit: () => void;\r\n  showCompleted?: boolean;\r\n}\r\n\r\nexport function GoalCard({ goal, onEdit, showCompleted = false }: GoalCardProps) {\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n  const progressPercentage = goal.target_value \r\n    ? Math.min(100, (goal.current_progress / goal.target_value) * 100)\r\n    : 0;\r\n\r\n  const isCompleted = goal.is_completed || progressPercentage >= 100;\r\n  const isOnTrack = progressPercentage >= 50; // Simple heuristic\r\n\r\n  const handleToggleComplete = async () => {\r\n    setIsUpdating(true);\r\n    try {\r\n      // TODO: Implement toggle completion API call\r\n      console.log('Toggle completion for goal:', goal.id);\r\n    } catch (error) {\r\n      console.error('Failed to toggle goal completion:', error);\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const getGoalIcon = () => {\r\n    if (goal.goal_type?.category === 'distance') return Target;\r\n    if (goal.goal_type?.category === 'event') return Calendar;\r\n    return TrendingUp;\r\n  };\r\n\r\n  const GoalIcon = getGoalIcon();\r\n\r\n  return (\r\n    <Card className={`transition-all hover:shadow-md ${isCompleted ? 'border-green-200 bg-green-50/50' : ''}`}>\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <div className={`p-2 rounded-lg ${isCompleted ? 'bg-green-100 text-green-600' : 'bg-primary/10 text-primary'}`}>\r\n              <GoalIcon className=\"h-4 w-4\" />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <CardTitle className=\"text-lg\">{goal.goal_type?.display_name}</CardTitle>\r\n              {goal.goal_data?.notes && (\r\n                <p className=\"text-sm text-muted-foreground mt-1\">\r\n                  {goal.goal_data.notes}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            {isCompleted && (\r\n              <Badge variant=\"secondary\" className=\"bg-green-100 text-green-700\">\r\n                <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                Complete\r\n              </Badge>\r\n            )}\r\n            \r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\r\n                  <MoreHorizontal className=\"h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent align=\"end\">\r\n                <DropdownMenuItem onClick={onEdit}>\r\n                  <Edit className=\"h-4 w-4 mr-2\" />\r\n                  Edit Goal\r\n                </DropdownMenuItem>\r\n                {!showCompleted && (\r\n                  <DropdownMenuItem \r\n                    onClick={handleToggleComplete}\r\n                    disabled={isUpdating}\r\n                  >\r\n                    <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n                    Mark Complete\r\n                  </DropdownMenuItem>\r\n                )}\r\n                <DropdownMenuItem>\r\n                  <Archive className=\"h-4 w-4 mr-2\" />\r\n                  Archive\r\n                </DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Target & Progress */}\r\n        <div className=\"space-y-3\">\r\n          <div className=\"flex items-center justify-between text-sm\">\r\n            <span className=\"text-muted-foreground\">Target</span>\r\n            <span className=\"font-medium\">\r\n              {goal.target_value} {goal.target_unit}\r\n              {goal.target_date && (\r\n                <span className=\"text-muted-foreground ml-2\">\r\n                  by {formatDate(goal.target_date)}\r\n                </span>\r\n              )}\r\n            </span>\r\n          </div>\r\n\r\n          {goal.target_value && (\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center justify-between text-sm\">\r\n                <span className=\"text-muted-foreground\">Progress</span>\r\n                <span className=\"font-medium\">\r\n                  {goal.current_progress} / {goal.target_value} {goal.target_unit}\r\n                </span>\r\n              </div>\r\n              \r\n              <Progress \r\n                value={progressPercentage} \r\n                className={`h-2 ${isCompleted ? '[&>div]:bg-green-500' : ''}`}\r\n              />\r\n              \r\n              <div className=\"flex items-center justify-between text-xs\">\r\n                <span className={`${isOnTrack ? 'text-green-600' : 'text-orange-600'}`}>\r\n                  {Math.round(progressPercentage)}% complete\r\n                </span>\r\n                {goal.target_value > goal.current_progress && (\r\n                  <span className=\"text-muted-foreground\">\r\n                    {(goal.target_value - goal.current_progress).toFixed(1)} {goal.target_unit} remaining\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Goal Type Badge */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <Badge variant=\"outline\" className=\"text-xs\">\r\n            {goal.goal_type?.category}\r\n          </Badge>\r\n          \r\n          {goal.last_progress_update && (\r\n            <span className=\"text-xs text-muted-foreground\">\r\n              Updated {formatDate(goal.last_progress_update)}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Quick Actions */}\r\n        {!showCompleted && !isCompleted && (\r\n          <div className=\"pt-2 border-t\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={onEdit}\r\n              className=\"w-full\"\r\n            >\r\n              <Edit className=\"h-3 w-3 mr-2\" />\r\n              Edit Goal\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n} "],"names":["GoalCard","goal","onEdit","showCompleted","isUpdating","setIsUpdating","useState","progressPercentage","target_value","Math","min","current_progress","isCompleted","is_completed","isOnTrack","handleToggleComplete","console","log","id","error","formatDate","dateString","Date","toLocaleDateString","month","day","year","getGoalIcon","goal_type","category","Target","Calendar","TrendingUp","GoalIcon","Card","className","CardHeader","div","CardTitle","display_name","goal_data","notes","p","Badge","variant","CheckCircle","DropdownMenu","DropdownMenuTrigger","asChild","Button","size","MoreHorizontal","DropdownMenuContent","align","DropdownMenuItem","onClick","Edit","disabled","Archive","CardContent","span","target_unit","target_date","Progress","value","round","toFixed","last_progress_update"],"mappings":"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"}