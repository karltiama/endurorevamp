{"version":3,"sources":["C:\\Users\\tiama\\Desktop\\Coding\\endurorevamp\\components\\dashboard\\DashboardGoalSelector.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n} from '@/components/ui/dialog';\r\nimport { useUserGoals, useUpdateGoal } from '@/hooks/useGoals';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Target, Plus, Check } from 'lucide-react';\r\nimport { AddGoalModal } from '@/components/goals/AddGoalModal';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface DashboardGoalSelectorProps {\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n}\r\n\r\nexport function DashboardGoalSelector({ open, onOpenChange }: DashboardGoalSelectorProps) {\r\n  const { data: goalsData, isLoading } = useUserGoals();\r\n  const updateGoalMutation = useUpdateGoal();\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [selectedGoals, setSelectedGoals] = useState<string[]>([]);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const activeGoals = goalsData?.goals?.filter(goal => goal.is_active) || [];\r\n  const currentDashboardGoals = activeGoals.filter(goal => \r\n    goal.goal_data?.show_on_dashboard\r\n  ).sort((a, b) => {\r\n    const aPriority = a.goal_data?.dashboard_priority || 999;\r\n    const bPriority = b.goal_data?.dashboard_priority || 999;\r\n    return aPriority - bPriority;\r\n  });\r\n\r\n  // Initialize selected goals with current dashboard goals\r\n  React.useEffect(() => {\r\n    if (currentDashboardGoals.length > 0 && selectedGoals.length === 0) {\r\n      setSelectedGoals(currentDashboardGoals.map(goal => goal.id));\r\n    }\r\n  }, [currentDashboardGoals, selectedGoals.length]);\r\n\r\n  const handleGoalToggle = (goalId: string) => {\r\n    if (selectedGoals.includes(goalId)) {\r\n      setSelectedGoals(prev => prev.filter(id => id !== goalId));\r\n    } else if (selectedGoals.length < 3) {\r\n      setSelectedGoals(prev => [...prev, goalId]);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setError('');\r\n    \r\n    try {\r\n      // Update all goals to remove from dashboard first\r\n      for (const goal of activeGoals) {\r\n        if (goal.goal_data?.show_on_dashboard) {\r\n          await updateGoalMutation.mutateAsync({\r\n            goalId: goal.id,\r\n            updates: {\r\n              goal_data: {\r\n                ...goal.goal_data,\r\n                show_on_dashboard: false,\r\n                dashboard_priority: undefined\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      // Then add selected goals to dashboard with priority\r\n      for (let i = 0; i < selectedGoals.length; i++) {\r\n        const goalId = selectedGoals[i];\r\n        const goal = activeGoals.find(g => g.id === goalId);\r\n        if (goal) {\r\n          await updateGoalMutation.mutateAsync({\r\n            goalId: goal.id,\r\n            updates: {\r\n              goal_data: {\r\n                ...goal.goal_data,\r\n                show_on_dashboard: true,\r\n                dashboard_priority: i + 1\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      onOpenChange(false);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to update dashboard goals');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Dialog open={open} onOpenChange={onOpenChange}>\r\n        <DialogContent className=\"max-w-2xl\">\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"text-center\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-4\"></div>\r\n              <p className=\"text-muted-foreground\">Loading your goals...</p>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open && !showAddModal} onOpenChange={onOpenChange}>\r\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <Target className=\"h-5 w-5\" />\r\n              Choose Dashboard Goals\r\n            </DialogTitle>\r\n            <DialogDescription>\r\n              Select up to 3 goals to track as key metrics on your dashboard. These will help you stay focused on your most important objectives.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n\r\n          <div className=\"space-y-6\">\r\n            {error && (\r\n              <Alert>\r\n                <AlertDescription>{error}</AlertDescription>\r\n              </Alert>\r\n            )}\r\n\r\n            {/* Selection Counter */}\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h4 className=\"font-medium text-blue-900\">Dashboard Goals</h4>\r\n                  <p className=\"text-sm text-blue-700\">\r\n                    {selectedGoals.length}/3 goals selected for your dashboard\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex -space-x-1\">\r\n                  {[1, 2, 3].map((slot) => (\r\n                    <div\r\n                      key={slot}\r\n                      className={cn(\r\n                        \"w-8 h-8 rounded-full border-2 border-white flex items-center justify-center text-xs font-medium\",\r\n                        selectedGoals.length >= slot\r\n                          ? \"bg-blue-600 text-white\"\r\n                          : \"bg-gray-200 text-gray-500\"\r\n                      )}\r\n                    >\r\n                      {selectedGoals.length >= slot ? (\r\n                        <Check className=\"h-4 w-4\" />\r\n                      ) : (\r\n                        slot\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Goals Selection */}\r\n            {activeGoals.length > 0 ? (\r\n              <div className=\"space-y-4\">\r\n                <h3 className=\"text-lg font-semibold\">Your Active Goals</h3>\r\n                <div className=\"grid gap-4\">\r\n                  {activeGoals.map((goal) => {\r\n                    const isSelected = selectedGoals.includes(goal.id);\r\n                    const priority = selectedGoals.indexOf(goal.id) + 1;\r\n                    const canSelect = isSelected || selectedGoals.length < 3;\r\n\r\n                    return (\r\n                      <Card\r\n                        key={goal.id}\r\n                        className={cn(\r\n                          \"cursor-pointer transition-all\",\r\n                          isSelected \r\n                            ? \"ring-2 ring-primary bg-primary/5\" \r\n                            : canSelect \r\n                              ? \"hover:shadow-md hover:ring-1 hover:ring-primary/30\" \r\n                              : \"opacity-60 cursor-not-allowed\"\r\n                        )}\r\n                        onClick={() => canSelect && handleGoalToggle(goal.id)}\r\n                      >\r\n                        <CardHeader className=\"pb-3\">\r\n                          <div className=\"flex items-start justify-between\">\r\n                            <div className=\"flex-1\">\r\n                              <CardTitle className=\"text-base flex items-center gap-2\">\r\n                                {goal.goal_type?.display_name}\r\n                                {isSelected && (\r\n                                  <Badge variant=\"default\" className=\"text-xs\">\r\n                                    #{priority} on Dashboard\r\n                                  </Badge>\r\n                                )}\r\n                              </CardTitle>\r\n                              <CardDescription className=\"mt-1\">\r\n                                {goal.goal_type?.description}\r\n                              </CardDescription>\r\n                              \r\n                              {/* Goal Details */}\r\n                              <div className=\"mt-2 space-y-1\">\r\n                                {goal.target_value && (\r\n                                  <p className=\"text-sm text-muted-foreground\">\r\n                                    Target: {goal.target_value} {goal.target_unit}\r\n                                    {goal.target_date && (\r\n                                      <span> by {new Date(goal.target_date).toLocaleDateString()}</span>\r\n                                    )}\r\n                                  </p>\r\n                                )}\r\n                                <div className=\"flex items-center gap-4\">\r\n                                  <span className=\"text-sm text-muted-foreground\">\r\n                                    Progress: {Math.round((goal.current_progress / (goal.target_value || 1)) * 100)}%\r\n                                  </span>\r\n                                  <Badge variant=\"outline\" className=\"text-xs\">\r\n                                    {goal.goal_type?.category}\r\n                                  </Badge>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            {isSelected && (\r\n                              <div className=\"ml-4\">\r\n                                <div className=\"w-6 h-6 bg-primary rounded-full flex items-center justify-center\">\r\n                                  <Check className=\"h-4 w-4 text-white\" />\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </CardHeader>\r\n                      </Card>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Card>\r\n                <CardContent className=\"p-8 text-center\">\r\n                  <Target className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\r\n                  <h3 className=\"text-lg font-semibold mb-2\">No Active Goals</h3>\r\n                  <p className=\"text-muted-foreground mb-6\">\r\n                    Create your first goal to start tracking your progress on the dashboard.\r\n                  </p>\r\n                  <Button onClick={() => setShowAddModal(true)}>\r\n                    <Plus className=\"h-4 w-4 mr-2\" />\r\n                    Create Your First Goal\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            {/* Quick Add Section */}\r\n            {activeGoals.length > 0 && (\r\n              <div className=\"border-t pt-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h4 className=\"font-medium\">Need more goals?</h4>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      Create additional goals to choose from\r\n                    </p>\r\n                  </div>\r\n                  <Button variant=\"outline\" onClick={() => setShowAddModal(true)}>\r\n                    <Plus className=\"h-4 w-4 mr-2\" />\r\n                    Add New Goal\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Action Buttons */}\r\n            {activeGoals.length > 0 && (\r\n              <div className=\"flex items-center justify-between pt-6 border-t\">\r\n                <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={handleSave}\r\n                  disabled={updateGoalMutation.isPending || selectedGoals.length === 0}\r\n                >\r\n                  {updateGoalMutation.isPending ? (\r\n                    <>\r\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                      Saving...\r\n                    </>\r\n                  ) : (\r\n                    `Save Dashboard Goals (${selectedGoals.length})`\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Add Goal Modal */}\r\n      <AddGoalModal\r\n        open={showAddModal}\r\n        onOpenChange={setShowAddModal}\r\n      />\r\n    </>\r\n  );\r\n} "],"names":["DashboardGoalSelector","open","onOpenChange","data","goalsData","isLoading","useUserGoals","updateGoalMutation","useUpdateGoal","showAddModal","setShowAddModal","useState","selectedGoals","setSelectedGoals","error","setError","activeGoals","goals","filter","goal","is_active","currentDashboardGoals","goal_data","show_on_dashboard","sort","a","b","aPriority","dashboard_priority","bPriority","React","useEffect","length","map","id","handleGoalToggle","goalId","includes","prev","handleSave","mutateAsync","updates","undefined","i","find","g","err","Error","message","Dialog","DialogContent","className","div","p","DialogHeader","DialogTitle","Target","DialogDescription","Alert","AlertDescription","h4","slot","cn","Check","h3","isSelected","priority","indexOf","canSelect","Card","onClick","CardHeader","CardTitle","goal_type","display_name","Badge","variant","CardDescription","description","target_value","target_unit","target_date","span","Date","toLocaleDateString","Math","round","current_progress","category","CardContent","Button","Plus","disabled","isPending","AddGoalModal"],"mappings":"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"}