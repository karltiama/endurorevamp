018455b4af6a550d6585e46edb8026a1
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AddGoalModal", {
    enumerable: true,
    get: function() {
        return AddGoalModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _dialog = require("../ui/dialog");
const _useGoals = require("../../hooks/useGoals");
const _button = require("../ui/button");
const _input = require("../ui/input");
const _label = require("../ui/label");
const _card = require("../ui/card");
const _badge = require("../ui/badge");
const _alert = require("../ui/alert");
const _lucidereact = require("lucide-react");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function AddGoalModal({ open, onOpenChange }) {
    const { data: goalTypes = [], isLoading: isLoadingTypes } = (0, _useGoals.useGoalTypes)();
    const createGoalMutation = (0, _useGoals.useCreateGoal)();
    const [selectedGoalType, setSelectedGoalType] = (0, _react.useState)('');
    const [formData, setFormData] = (0, _react.useState)({});
    const [error, setError] = (0, _react.useState)('');
    const handleReset = ()=>{
        setSelectedGoalType('');
        setFormData({});
        setError('');
    };
    const handleClose = (isOpen)=>{
        if (!isOpen) {
            handleReset();
        }
        onOpenChange(isOpen);
    };
    const handleSubmit = async ()=>{
        if (!selectedGoalType) {
            setError('Please select a goal type.');
            return;
        }
        const goalType = goalTypes.find((gt)=>gt.id === selectedGoalType);
        if (!goalType) {
            setError('Invalid goal type selected.');
            return;
        }
        // Validate required fields
        if (goalType.category === 'distance' && !formData.targetValue) {
            setError('Please enter a target value for distance goals.');
            return;
        }
        if (goalType.category === 'frequency' && !formData.targetValue) {
            setError('Please enter a target value for frequency goals.');
            return;
        }
        if (goalType.category === 'pace' && !formData.targetValue) {
            setError('Please enter a target pace for pace goals.');
            return;
        }
        if (goalType.category === 'duration' && !formData.targetValue) {
            setError('Please enter a target duration for duration goals.');
            return;
        }
        if (goalType.category === 'elevation' && !formData.targetValue) {
            setError('Please enter a target elevation for elevation goals.');
            return;
        }
        if (goalType.category === 'event' && !formData.targetDate) {
            setError('Please select a target date for event goals.');
            return;
        }
        setError('');
        try {
            await createGoalMutation.mutateAsync({
                goal_type_id: selectedGoalType,
                target_value: formData.targetValue,
                target_unit: formData.targetUnit || goalType.unit,
                target_date: formData.targetDate,
                goal_data: {
                    notes: formData.notes || ''
                },
                priority: 1
            });
            handleClose(false);
        } catch (err) {
            setError(err instanceof Error ? err.message : 'Failed to create goal. Please try again.');
        }
    };
    const selectedGoal = goalTypes.find((gt)=>gt.id === selectedGoalType);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.Dialog, {
        open: open,
        onOpenChange: handleClose,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
            className: "max-w-2xl max-h-[90vh] overflow-y-auto",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogHeader, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogTitle, {
                            className: "flex items-center gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Plus, {
                                    className: "h-5 w-5"
                                }),
                                "Add New Goal"
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogDescription, {
                            children: "Choose a goal type and set your target to start tracking your progress"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "space-y-6",
                    children: [
                        error && /*#__PURE__*/ (0, _jsxruntime.jsx)(_alert.Alert, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_alert.AlertDescription, {
                                children: error
                            })
                        }),
                        !selectedGoalType ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                    className: "text-lg font-semibold",
                                    children: "Choose Your Goal Type"
                                }),
                                isLoadingTypes ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "grid gap-4 md:grid-cols-2",
                                    children: [
                                        1,
                                        2,
                                        3,
                                        4
                                    ].map((i)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "h-24 bg-muted animate-pulse rounded-lg"
                                        }, i))
                                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "grid gap-4 md:grid-cols-2",
                                    children: goalTypes.map((goalType)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
                                            className: "cursor-pointer transition-all hover:shadow-md hover:ring-2 hover:ring-primary/50",
                                            onClick: ()=>{
                                                setSelectedGoalType(goalType.id);
                                                setFormData({
                                                    targetUnit: goalType.unit
                                                });
                                            },
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                                className: "pb-3",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "flex items-start justify-between",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                                                    className: "text-base",
                                                                    children: goalType.display_name
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardDescription, {
                                                                    className: "mt-1 text-sm",
                                                                    children: goalType.description
                                                                })
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                            variant: goalType.category === 'distance' ? 'default' : 'secondary',
                                                            children: goalType.category
                                                        })
                                                    ]
                                                })
                                            })
                                        }, goalType.id))
                                })
                            ]
                        }) : /* Goal Configuration */ /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-6",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center gap-4",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            variant: "outline",
                                            size: "sm",
                                            onClick: ()=>setSelectedGoalType(''),
                                            children: "← Back"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                    className: "text-lg font-semibold",
                                                    children: selectedGoal?.display_name
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-sm text-muted-foreground",
                                                    children: selectedGoal?.description
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "space-y-4",
                                    children: [
                                        selectedGoal?.category === 'distance' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                    htmlFor: "targetValue",
                                                    className: "text-sm font-medium",
                                                    children: [
                                                        "Target ",
                                                        selectedGoal.unit === 'km' ? 'Kilometers' : 'Miles',
                                                        " *"
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                    id: "targetValue",
                                                    type: "number",
                                                    placeholder: selectedGoal.name.includes('weekly') ? '20' : '100',
                                                    value: formData.targetValue || '',
                                                    onChange: (e)=>setFormData((prev)=>({
                                                                ...prev,
                                                                targetValue: parseFloat(e.target.value) || undefined
                                                            })),
                                                    className: "mt-1"
                                                })
                                            ]
                                        }),
                                        selectedGoal?.category === 'frequency' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                    htmlFor: "targetValue",
                                                    className: "text-sm font-medium",
                                                    children: [
                                                        "Target ",
                                                        selectedGoal.unit === 'runs' ? 'Runs' : selectedGoal.unit || 'Activities',
                                                        " *"
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                    id: "targetValue",
                                                    type: "number",
                                                    placeholder: selectedGoal.name.includes('weekly') ? '3' : '12',
                                                    value: formData.targetValue || '',
                                                    onChange: (e)=>setFormData((prev)=>({
                                                                ...prev,
                                                                targetValue: parseFloat(e.target.value) || undefined
                                                            })),
                                                    className: "mt-1"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-xs text-muted-foreground mt-1",
                                                    children: selectedGoal.name.includes('weekly') ? 'Number of runs per week you want to maintain' : 'Number of runs per month you want to maintain'
                                                })
                                            ]
                                        }),
                                        selectedGoal?.category === 'pace' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                    htmlFor: "targetValue",
                                                    className: "text-sm font-medium",
                                                    children: "Target Pace (minutes per km) *"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                    id: "targetValue",
                                                    type: "number",
                                                    step: "0.1",
                                                    placeholder: "e.g., 5.5",
                                                    value: formData.targetValue || '',
                                                    onChange: (e)=>setFormData((prev)=>({
                                                                ...prev,
                                                                targetValue: parseFloat(e.target.value) || undefined
                                                            })),
                                                    className: "mt-1"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-xs text-muted-foreground mt-1",
                                                    children: "Enter pace in minutes per kilometer (e.g., 5.5 for 5:30/km)"
                                                })
                                            ]
                                        }),
                                        selectedGoal?.category === 'duration' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                    htmlFor: "targetValue",
                                                    className: "text-sm font-medium",
                                                    children: "Target Minutes *"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                    id: "targetValue",
                                                    type: "number",
                                                    placeholder: "e.g., 60",
                                                    value: formData.targetValue || '',
                                                    onChange: (e)=>setFormData((prev)=>({
                                                                ...prev,
                                                                targetValue: parseFloat(e.target.value) || undefined
                                                            })),
                                                    className: "mt-1"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-xs text-muted-foreground mt-1",
                                                    children: "Enter duration in minutes"
                                                })
                                            ]
                                        }),
                                        selectedGoal?.category === 'elevation' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                    htmlFor: "targetValue",
                                                    className: "text-sm font-medium",
                                                    children: "Target Elevation *"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                    id: "targetValue",
                                                    type: "number",
                                                    placeholder: "e.g., 1000 meters",
                                                    value: formData.targetValue || '',
                                                    onChange: (e)=>setFormData((prev)=>({
                                                                ...prev,
                                                                targetValue: parseFloat(e.target.value) || undefined
                                                            })),
                                                    className: "mt-1"
                                                })
                                            ]
                                        }),
                                        selectedGoal?.category === 'event' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                    htmlFor: "targetDate",
                                                    className: "text-sm font-medium",
                                                    children: "Race Date *"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                    id: "targetDate",
                                                    type: "date",
                                                    value: formData.targetDate || '',
                                                    onChange: (e)=>setFormData((prev)=>({
                                                                ...prev,
                                                                targetDate: e.target.value
                                                            })),
                                                    className: "mt-1"
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                    htmlFor: "notes",
                                                    className: "text-sm font-medium",
                                                    children: "Notes (optional)"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                    id: "notes",
                                                    placeholder: "Any additional details about your goal...",
                                                    value: formData.notes || '',
                                                    onChange: (e)=>setFormData((prev)=>({
                                                                ...prev,
                                                                notes: e.target.value
                                                            })),
                                                    className: "mt-1"
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-end gap-3 pt-4 border-t",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            variant: "outline",
                                            onClick: ()=>handleClose(false),
                                            disabled: createGoalMutation.isPending,
                                            children: "Cancel"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            onClick: handleSubmit,
                                            disabled: createGoalMutation.isPending,
                                            children: createGoalMutation.isPending ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                        className: "animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"
                                                    }),
                                                    "Creating..."
                                                ]
                                            }) : 'Create Goal'
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,