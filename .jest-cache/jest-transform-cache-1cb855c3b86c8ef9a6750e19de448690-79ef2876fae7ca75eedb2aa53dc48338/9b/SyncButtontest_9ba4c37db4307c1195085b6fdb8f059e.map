{"version":3,"sources":["C:\\Users\\tiama\\Desktop\\Coding\\endurorevamp\\__tests__\\components\\strava\\SyncButton.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, screen, fireEvent } from '@testing-library/react';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { SyncButton } from '@/components/strava/SyncButton';\r\n\r\n// Mock the working hook\r\njest.mock('@/hooks/use-strava-sync', () => ({\r\n  useStravaSync: jest.fn(() => ({\r\n    customSync: jest.fn(),\r\n    isSyncing: false,\r\n    syncError: null,\r\n    syncResult: null,\r\n    syncStatus: { canSync: true, activityCount: 0 },\r\n    isLoadingStatus: false,\r\n  })),\r\n}));\r\n\r\nconst renderWithQueryClient = (component: React.ReactElement) => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false },\r\n    },\r\n  });\r\n\r\n  return render(\r\n    <QueryClientProvider client={queryClient}>\r\n      {component}\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\ndescribe('SyncButton (Fixed)', () => {\r\n  it('renders sync button', () => {\r\n    renderWithQueryClient(<SyncButton />);\r\n    expect(screen.getByText('Sync Strava Data')).toBeInTheDocument();\r\n  });\r\n\r\n  it('shows syncing state', () => {\r\n    const mockUseStravaSync = require('@/hooks/use-strava-sync').useStravaSync;\r\n    mockUseStravaSync.mockReturnValue({\r\n      customSync: jest.fn(),\r\n      isSyncing: true,\r\n      syncError: null,\r\n      syncResult: null,\r\n      syncStatus: { canSync: true, activityCount: 0 },\r\n      isLoadingStatus: false,\r\n    });\r\n\r\n    renderWithQueryClient(<SyncButton />);\r\n    expect(screen.getByText('Syncing...')).toBeInTheDocument();\r\n  });\r\n\r\n  it('shows error state', () => {\r\n    const mockUseStravaSync = require('@/hooks/use-strava-sync').useStravaSync;\r\n    mockUseStravaSync.mockReturnValue({\r\n      customSync: jest.fn(),\r\n      isSyncing: false,\r\n      syncError: { message: 'Test error' },\r\n      syncResult: null,\r\n      syncStatus: { canSync: true, activityCount: 0 },\r\n      isLoadingStatus: false,\r\n    });\r\n\r\n    renderWithQueryClient(<SyncButton />);\r\n    expect(screen.getByText('Error:')).toBeInTheDocument();\r\n    expect(screen.getByText('Test error')).toBeInTheDocument();\r\n  });\r\n\r\n  it('shows success state', () => {\r\n    const mockUseStravaSync = require('@/hooks/use-strava-sync').useStravaSync;\r\n    mockUseStravaSync.mockReturnValue({\r\n      customSync: jest.fn(),\r\n      isSyncing: false,\r\n      syncError: null,\r\n      syncResult: {\r\n        success: true,\r\n        data: {\r\n          activitiesProcessed: 5,\r\n          newActivities: 3,\r\n          updatedActivities: 2,\r\n          syncDuration: 2000,\r\n        },\r\n      },\r\n      syncStatus: { canSync: true, activityCount: 10 },\r\n      isLoadingStatus: false,\r\n    });\r\n\r\n    renderWithQueryClient(<SyncButton />);\r\n    expect(screen.getByText('Last Sync Results:')).toBeInTheDocument();\r\n    expect(screen.getByText(/Activities processed:/)).toBeInTheDocument();\r\n    expect(screen.getByText(/New activities:/)).toBeInTheDocument();\r\n  });\r\n\r\n  it('calls customSync when clicked', () => {\r\n    const mockCustomSync = jest.fn();\r\n    const mockUseStravaSync = require('@/hooks/use-strava-sync').useStravaSync;\r\n    mockUseStravaSync.mockReturnValue({\r\n      customSync: mockCustomSync,\r\n      isSyncing: false,\r\n      syncError: null,\r\n      syncResult: null,\r\n      syncStatus: { canSync: true, activityCount: 0 },\r\n      isLoadingStatus: false,\r\n    });\r\n\r\n    renderWithQueryClient(<SyncButton />);\r\n    \r\n    const button = screen.getByText('Sync Strava Data');\r\n    fireEvent.click(button);\r\n    \r\n    expect(mockCustomSync).toHaveBeenCalledWith({\r\n      maxActivities: 50,\r\n      sinceDays: 30,\r\n    });\r\n  });\r\n}); "],"names":["jest","mock","useStravaSync","fn","customSync","isSyncing","syncError","syncResult","syncStatus","canSync","activityCount","isLoadingStatus","renderWithQueryClient","component","queryClient","QueryClient","defaultOptions","queries","retry","mutations","render","QueryClientProvider","client","describe","it","SyncButton","expect","screen","getByText","toBeInTheDocument","mockUseStravaSync","require","mockReturnValue","message","success","data","activitiesProcessed","newActivities","updatedActivities","syncDuration","mockCustomSync","button","fireEvent","click","toHaveBeenCalledWith","maxActivities","sinceDays"],"mappings":"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"}