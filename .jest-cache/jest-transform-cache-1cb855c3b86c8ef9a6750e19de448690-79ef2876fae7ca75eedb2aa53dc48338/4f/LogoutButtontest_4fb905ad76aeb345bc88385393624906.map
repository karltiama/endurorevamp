{"version":3,"sources":["C:\\Users\\tiama\\Desktop\\Coding\\endurorevamp\\__tests__\\components\\LogoutButton.test.tsx"],"sourcesContent":["import { render, screen, fireEvent, waitFor } from '@testing-library/react'\r\nimport LogoutButton from '@/components/LogoutButton'\r\nimport { useAuth } from '@/providers/AuthProvider'\r\n\r\n// Mock the auth provider\r\njest.mock('@/providers/AuthProvider')\r\n\r\nconst mockUseAuth = useAuth as jest.MockedFunction<typeof useAuth>\r\n\r\ndescribe('LogoutButton', () => {\r\n  const mockSignOut = jest.fn()\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks()\r\n  })\r\n\r\n  it('should render sign out button when not loading', () => {\r\n    mockUseAuth.mockReturnValue({\r\n      user: { id: 'user-123', email: 'test@example.com' } as any,\r\n      isLoading: false,\r\n      isAuthenticated: true,\r\n      signOut: mockSignOut,\r\n      refreshUser: jest.fn(),\r\n    })\r\n\r\n    render(<LogoutButton />)\r\n\r\n    const button = screen.getByRole('button', { name: /sign out/i })\r\n    expect(button).toBeInTheDocument()\r\n    expect(button).not.toBeDisabled()\r\n  })\r\n\r\n  it('should render signing out text when loading', () => {\r\n    mockUseAuth.mockReturnValue({\r\n      user: { id: 'user-123', email: 'test@example.com' } as any,\r\n      isLoading: true,\r\n      isAuthenticated: true,\r\n      signOut: mockSignOut,\r\n      refreshUser: jest.fn(),\r\n    })\r\n\r\n    render(<LogoutButton />)\r\n\r\n    const button = screen.getByRole('button', { name: /signing out/i })\r\n    expect(button).toBeInTheDocument()\r\n    expect(button).toBeDisabled()\r\n  })\r\n\r\n  it('should call signOut when clicked', async () => {\r\n    mockUseAuth.mockReturnValue({\r\n      user: { id: 'user-123', email: 'test@example.com' } as any,\r\n      isLoading: false,\r\n      isAuthenticated: true,\r\n      signOut: mockSignOut,\r\n      refreshUser: jest.fn(),\r\n    })\r\n\r\n    render(<LogoutButton />)\r\n\r\n    const button = screen.getByRole('button', { name: /sign out/i })\r\n    fireEvent.click(button)\r\n\r\n    await waitFor(() => {\r\n      expect(mockSignOut).toHaveBeenCalledTimes(1)\r\n    })\r\n  })\r\n\r\n  it('should be disabled when loading', () => {\r\n    mockUseAuth.mockReturnValue({\r\n      user: { id: 'user-123', email: 'test@example.com' } as any,\r\n      isLoading: true,\r\n      isAuthenticated: true,\r\n      signOut: mockSignOut,\r\n      refreshUser: jest.fn(),\r\n    })\r\n\r\n    render(<LogoutButton />)\r\n\r\n    const button = screen.getByRole('button')\r\n    expect(button).toBeDisabled()\r\n  })\r\n}) "],"names":["jest","mock","mockUseAuth","useAuth","describe","mockSignOut","fn","beforeEach","clearAllMocks","it","mockReturnValue","user","id","email","isLoading","isAuthenticated","signOut","refreshUser","render","LogoutButton","button","screen","getByRole","name","expect","toBeInTheDocument","not","toBeDisabled","fireEvent","click","waitFor","toHaveBeenCalledTimes"],"mappings":";AAIA,yBAAyB;AACzBA,KAAKC,IAAI,CAAC;;;;;uBALyC;qEAC1B;8BACD;;;;;;AAKxB,MAAMC,cAAcC,qBAAO;AAE3BC,SAAS,gBAAgB;IACvB,MAAMC,cAAcL,KAAKM,EAAE;IAE3BC,WAAW;QACTP,KAAKQ,aAAa;IACpB;IAEAC,GAAG,kDAAkD;QACnDP,YAAYQ,eAAe,CAAC;YAC1BC,MAAM;gBAAEC,IAAI;gBAAYC,OAAO;YAAmB;YAClDC,WAAW;YACXC,iBAAiB;YACjBC,SAASX;YACTY,aAAajB,KAAKM,EAAE;QACtB;QAEAY,IAAAA,aAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMC,SAASC,aAAM,CAACC,SAAS,CAAC,UAAU;YAAEC,MAAM;QAAY;QAC9DC,OAAOJ,QAAQK,iBAAiB;QAChCD,OAAOJ,QAAQM,GAAG,CAACC,YAAY;IACjC;IAEAlB,GAAG,+CAA+C;QAChDP,YAAYQ,eAAe,CAAC;YAC1BC,MAAM;gBAAEC,IAAI;gBAAYC,OAAO;YAAmB;YAClDC,WAAW;YACXC,iBAAiB;YACjBC,SAASX;YACTY,aAAajB,KAAKM,EAAE;QACtB;QAEAY,IAAAA,aAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMC,SAASC,aAAM,CAACC,SAAS,CAAC,UAAU;YAAEC,MAAM;QAAe;QACjEC,OAAOJ,QAAQK,iBAAiB;QAChCD,OAAOJ,QAAQO,YAAY;IAC7B;IAEAlB,GAAG,oCAAoC;QACrCP,YAAYQ,eAAe,CAAC;YAC1BC,MAAM;gBAAEC,IAAI;gBAAYC,OAAO;YAAmB;YAClDC,WAAW;YACXC,iBAAiB;YACjBC,SAASX;YACTY,aAAajB,KAAKM,EAAE;QACtB;QAEAY,IAAAA,aAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMC,SAASC,aAAM,CAACC,SAAS,CAAC,UAAU;YAAEC,MAAM;QAAY;QAC9DK,gBAAS,CAACC,KAAK,CAACT;QAEhB,MAAMU,IAAAA,cAAO,EAAC;YACZN,OAAOnB,aAAa0B,qBAAqB,CAAC;QAC5C;IACF;IAEAtB,GAAG,mCAAmC;QACpCP,YAAYQ,eAAe,CAAC;YAC1BC,MAAM;gBAAEC,IAAI;gBAAYC,OAAO;YAAmB;YAClDC,WAAW;YACXC,iBAAiB;YACjBC,SAASX;YACTY,aAAajB,KAAKM,EAAE;QACtB;QAEAY,IAAAA,aAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMC,SAASC,aAAM,CAACC,SAAS,CAAC;QAChCE,OAAOJ,QAAQO,YAAY;IAC7B;AACF"}