{"version":3,"sources":["C:\\Users\\tiama\\Desktop\\Coding\\endurorevamp\\components\\strava\\StravaConnectionStatus.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Loader2, Link2, Unlink, User, Calendar, CheckCircle2, AlertCircle } from 'lucide-react';\r\nimport { useStravaConnection } from '@/hooks/strava/useStravaConnection';\r\nimport { useStravaAuth } from '@/hooks/use-strava-auth';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { useAuth } from '@/providers/AuthProvider';\r\nimport { getStravaAuthUrl } from '@/lib/strava';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSearchParams, useRouter } from 'next/navigation';\r\n\r\nexport function StravaConnectionStatus() {\r\n  const searchParams = useSearchParams();\r\n  const router = useRouter();\r\n  const queryClient = useQueryClient();\r\n  const { user } = useAuth();\r\n  const { connectionStatus, isLoading: isCheckingConnection, error: connectionError, disconnect } = useStravaConnection();\r\n  const { mutate: exchangeToken, isPending: isAuthing } = useStravaAuth();\r\n  const [isDisconnecting, setIsDisconnecting] = useState(false);\r\n  const [authError, setAuthError] = useState<string | null>(null);\r\n  const [authSuccess, setAuthSuccess] = useState(false);\r\n\r\n  // Handle OAuth callback\r\n  useEffect(() => {\r\n    const code = searchParams.get('code');\r\n    const error = searchParams.get('error');\r\n    const errorDescription = searchParams.get('error_description');\r\n\r\n    console.log('🔍 OAuth check:', { code: !!code, error, errorDescription });\r\n\r\n    // Handle OAuth errors from Strava\r\n    if (error) {\r\n      console.error('❌ OAuth error from Strava:', { error, errorDescription });\r\n      setAuthError(\r\n        errorDescription || \r\n        (error === 'access_denied' ? 'Access denied by user' : 'Authorization failed')\r\n      );\r\n      \r\n      // Clean up URL parameters\r\n      const newUrl = new URL(window.location.href);\r\n      newUrl.searchParams.delete('code');\r\n      newUrl.searchParams.delete('error');\r\n      newUrl.searchParams.delete('error_description');\r\n      newUrl.searchParams.delete('state');\r\n      newUrl.searchParams.delete('scope');\r\n      router.replace(newUrl.pathname + newUrl.search, { scroll: false });\r\n      return;\r\n    }\r\n\r\n    // Handle successful OAuth code\r\n    if (code && !connectionStatus?.connected && !isAuthing) {\r\n      console.log('🔄 Processing OAuth code...');\r\n      setAuthError(null);\r\n      \r\n      // Clear URL parameters immediately to prevent re-processing\r\n      const newUrl = new URL(window.location.href);\r\n      const cleanedUrl = newUrl.pathname + newUrl.search.replace(/[?&]code=[^&]*/g, '').replace(/[?&]error=[^&]*/g, '').replace(/[?&]error_description=[^&]*/g, '').replace(/[?&]state=[^&]*/g, '').replace(/[?&]scope=[^&]*/g, '').replace(/^&/, '?').replace(/[?&]$/, '');\r\n      router.replace(cleanedUrl, { scroll: false });\r\n      \r\n      exchangeToken(code, {\r\n        onSuccess: async (data) => {\r\n          console.log('✅ Successfully connected to Strava:', data);\r\n          setAuthSuccess(true);\r\n          \r\n          // Invalidate queries to ensure fresh data\r\n          await queryClient.invalidateQueries({ \r\n            queryKey: ['strava', 'connection'] \r\n          });\r\n          \r\n          // Clear success message after delay\r\n          setTimeout(() => {\r\n            setAuthSuccess(false);\r\n          }, 3000);\r\n        },\r\n        onError: (error) => {\r\n          console.error('❌ Failed to connect to Strava:', error);\r\n          \r\n          let errorMessage = 'Failed to connect to Strava';\r\n          if (error instanceof Error) {\r\n            if (error.message.includes('401')) {\r\n              errorMessage = 'Invalid authorization code. Please try connecting again.';\r\n            } else if (error.message.includes('403')) {\r\n              errorMessage = 'Access forbidden. Please check your Strava permissions.';\r\n            } else if (error.message.includes('429')) {\r\n              errorMessage = 'Too many requests. Please wait a moment and try again.';\r\n            } else if (error.message.includes('500')) {\r\n              errorMessage = 'Server error. Please try again later.';\r\n            } else {\r\n              errorMessage = error.message;\r\n            }\r\n          }\r\n          \r\n          setAuthError(errorMessage);\r\n        }\r\n      });\r\n    }\r\n  }, [searchParams, connectionStatus?.connected, isAuthing, exchangeToken, router, queryClient, user?.id]);\r\n\r\n  const handleConnect = () => {\r\n    window.location.href = getStravaAuthUrl(window.location.origin);\r\n  };\r\n\r\n  const handleDisconnect = async () => {\r\n    setIsDisconnecting(true);\r\n    try {\r\n      await disconnect();\r\n    } catch (error) {\r\n      console.error('Disconnect failed:', error);\r\n    } finally {\r\n      setIsDisconnecting(false);\r\n    }\r\n  };\r\n\r\n  if (isCheckingConnection || isAuthing) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Loader2 className=\"h-5 w-5 animate-spin\" />\r\n            Strava Connection\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            {isAuthing ? 'Connecting to Strava...' : 'Checking connection status...'}\r\n          </p>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <div className=\"h-6 w-6 bg-orange-500 rounded flex items-center justify-center\">\r\n            <span className=\"text-white font-bold text-xs\">S</span>\r\n          </div>\r\n          Strava Connection\r\n        </CardTitle>\r\n        <CardDescription>\r\n          Connect your Strava account to sync activities and track your training progress.\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Connection Status */}\r\n        <div className=\"flex items-center justify-between p-4 rounded-lg border\">\r\n          <div className=\"flex items-center gap-3\">\r\n            {connectionStatus?.connected ? (\r\n              <>\r\n                <CheckCircle2 className=\"h-5 w-5 text-green-500\" />\r\n                <div>\r\n                  <p className=\"font-medium\">Connected</p>\r\n                  {connectionStatus.athlete && (\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      {connectionStatus.athlete.firstname} {connectionStatus.athlete.lastname}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <AlertCircle className=\"h-5 w-5 text-orange-500\" />\r\n                <div>\r\n                  <p className=\"font-medium\">Not Connected</p>\r\n                  <p className=\"text-sm text-muted-foreground\">Connect to start syncing your activities</p>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <Badge variant={connectionStatus?.connected ? \"default\" : \"secondary\"}>\r\n            {connectionStatus?.connected ? \"Active\" : \"Disconnected\"}\r\n          </Badge>\r\n        </div>\r\n\r\n        {/* Success Message */}\r\n        {authSuccess && (\r\n          <Alert>\r\n            <CheckCircle2 className=\"h-4 w-4\" />\r\n            <AlertDescription>\r\n              Successfully connected to Strava! Your account is now linked.\r\n            </AlertDescription>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Error Messages */}\r\n        {(connectionError || authError) && (\r\n          <Alert>\r\n            <AlertCircle className=\"h-4 w-4\" />\r\n            <AlertDescription>\r\n              {authError || connectionError}\r\n            </AlertDescription>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex gap-2\">\r\n          {connectionStatus?.connected ? (\r\n            <Button \r\n              variant=\"outline\" \r\n              onClick={handleDisconnect} \r\n              disabled={isDisconnecting}\r\n              className=\"w-full\"\r\n            >\r\n              {isDisconnecting ? (\r\n                <>\r\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                  Disconnecting...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Unlink className=\"h-4 w-4 mr-2\" />\r\n                  Disconnect\r\n                </>\r\n              )}\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={handleConnect} className=\"w-full\">\r\n              <Link2 className=\"h-4 w-4 mr-2\" />\r\n              Connect to Strava\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Connection Info */}\r\n        {connectionStatus?.connected && connectionStatus.expiresAt && (\r\n          <div className=\"text-xs text-muted-foreground space-y-1\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Calendar className=\"h-3 w-3\" />\r\n              Token expires: {new Date(connectionStatus.expiresAt).toLocaleDateString()}\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <User className=\"h-3 w-3\" />\r\n              Athlete ID: {connectionStatus.athlete?.id}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Benefits */}\r\n        {!connectionStatus?.connected && (\r\n          <div className=\"text-sm text-muted-foreground\">\r\n            <p className=\"font-medium mb-2\">Benefits of connecting:</p>\r\n            <ul className=\"space-y-1 text-xs\">\r\n              <li>• Automatically sync your activities</li>\r\n              <li>• Track performance metrics over time</li>\r\n              <li>• Analyze training patterns and trends</li>\r\n              <li>• Get detailed insights on your progress</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n} "],"names":["StravaConnectionStatus","searchParams","useSearchParams","router","useRouter","queryClient","useQueryClient","user","useAuth","connectionStatus","isLoading","isCheckingConnection","error","connectionError","disconnect","useStravaConnection","mutate","exchangeToken","isPending","isAuthing","useStravaAuth","isDisconnecting","setIsDisconnecting","useState","authError","setAuthError","authSuccess","setAuthSuccess","useEffect","code","get","errorDescription","console","log","newUrl","URL","window","location","href","delete","replace","pathname","search","scroll","connected","cleanedUrl","onSuccess","data","invalidateQueries","queryKey","setTimeout","onError","errorMessage","Error","message","includes","id","handleConnect","getStravaAuthUrl","origin","handleDisconnect","Card","CardHeader","CardTitle","className","Loader2","CardContent","p","div","span","CardDescription","CheckCircle2","athlete","firstname","lastname","AlertCircle","Badge","variant","Alert","AlertDescription","Button","onClick","disabled","Unlink","Link2","expiresAt","Calendar","Date","toLocaleDateString","User","ul","li"],"mappings":"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"}