df7884147c2904310cd65e166ac5e68e
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MonthlyActivityChart", {
    enumerable: true,
    get: function() {
        return MonthlyActivityChart;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _card = require("../ui/card");
const _useuseractivities = require("../../hooks/use-user-activities");
const _useUnitPreferences = require("../../hooks/useUnitPreferences");
const _react = require("react");
const _recharts = require("recharts");
const _utils = require("../../lib/utils");
function MonthlyActivityChart({ userId }) {
    const { data: activities, isLoading, error } = (0, _useuseractivities.useUserActivities)(userId);
    const { preferences } = (0, _useUnitPreferences.useUnitPreferences)();
    const monthlyData = (0, _react.useMemo)(()=>{
        if (!activities) return [];
        const currentYear = new Date().getFullYear();
        const monthlyTotals = new Array(12).fill(0);
        const monthlyCounts = new Array(12).fill(0);
        activities.forEach((activity)=>{
            const date = new Date(activity.start_date);
            if (date.getFullYear() === currentYear) {
                const month = date.getMonth();
                monthlyTotals[month] += activity.distance;
                monthlyCounts[month]++;
            }
        });
        return monthlyTotals.map((distance, index)=>({
                month: new Date(2024, index, 1).toLocaleString('default', {
                    month: 'short'
                }),
                distance: Math.round((0, _utils.convertDistance)(distance, preferences.distance)),
                count: monthlyCounts[index]
            }));
    }, [
        activities,
        preferences.distance
    ]);
    if (isLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                            children: "Monthly Activity"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardDescription, {
                            children: "Loading activity data..."
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "h-[300px] animate-pulse bg-gray-100 rounded-lg"
                    })
                })
            ]
        });
    }
    if (error) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                            children: "Monthly Activity"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardDescription, {
                            children: "Error loading activity data"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "text-red-500",
                        children: error instanceof Error ? error.message : 'Failed to load activity data'
                    })
                })
            ]
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                        children: "Monthly Activity"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardDescription, {
                        children: "Your activity distance by month this year"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "h-[300px]",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                        width: "100%",
                        height: "100%",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.BarChart, {
                            data: monthlyData,
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                                    strokeDasharray: "3 3",
                                    className: "stroke-muted"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.XAxis, {
                                    dataKey: "month",
                                    stroke: "#888888",
                                    fontSize: 12,
                                    tickLine: false,
                                    axisLine: false
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.YAxis, {
                                    stroke: "#888888",
                                    fontSize: 12,
                                    tickLine: false,
                                    axisLine: false,
                                    tickFormatter: (value)=>`${value}${(0, _utils.getDistanceUnit)(preferences.distance)}`
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {
                                    content: ({ active, payload })=>{
                                        if (active && payload && payload.length) {
                                            return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "rounded-lg border bg-background p-2 shadow-sm",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "grid grid-cols-2 gap-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex flex-col",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                    className: "text-[0.70rem] uppercase text-muted-foreground",
                                                                    children: "Distance"
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                    className: "font-bold text-muted-foreground",
                                                                    children: [
                                                                        payload[0].value,
                                                                        (0, _utils.getDistanceUnit)(preferences.distance)
                                                                    ]
                                                                })
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex flex-col",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                    className: "text-[0.70rem] uppercase text-muted-foreground",
                                                                    children: "Activities"
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                    className: "font-bold text-muted-foreground",
                                                                    children: payload[0].payload.count
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                })
                                            });
                                        }
                                        return null;
                                    }
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Bar, {
                                    dataKey: "distance",
                                    fill: "hsl(var(--primary))",
                                    radius: [
                                        4,
                                        4,
                                        0,
                                        0
                                    ],
                                    className: "fill-primary"
                                })
                            ]
                        })
                    })
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,