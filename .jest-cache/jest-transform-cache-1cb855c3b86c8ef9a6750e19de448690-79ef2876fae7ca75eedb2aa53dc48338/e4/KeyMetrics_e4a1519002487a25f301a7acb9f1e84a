7e0fcaed3fa58af75d339cac4ae9d057
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "KeyMetrics", {
    enumerable: true,
    get: function() {
        return KeyMetrics;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _useGoals = require("../../hooks/useGoals");
const _useuseractivities = require("../../hooks/use-user-activities");
const _useUnitPreferences = require("../../hooks/useUnitPreferences");
const _utils = require("../../lib/utils");
const _DashboardGoalSelector = require("./DashboardGoalSelector");
const _button = require("../ui/button");
const _lucidereact = require("lucide-react");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function KeyMetrics({ userId }) {
    const { data: goalsData, isLoading: goalsLoading } = (0, _useGoals.useUserGoals)();
    const { isLoading: activitiesLoading } = (0, _useuseractivities.useUserActivities)(userId);
    const { preferences } = (0, _useUnitPreferences.useUnitPreferences)();
    const [showGoalSelector, setShowGoalSelector] = (0, _react.useState)(false);
    if (goalsLoading || activitiesLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(KeyMetricsSkeleton, {});
    }
    // Get goals marked for dashboard display
    const dashboardGoals = goalsData?.goals?.filter((goal)=>goal.goal_data?.show_on_dashboard && goal.is_active).sort((a, b)=>{
        const aPriority = a.goal_data?.dashboard_priority || 999;
        const bPriority = b.goal_data?.dashboard_priority || 999;
        return aPriority - bPriority;
    }) || [];
    // If no dashboard goals are set, show message to set them up
    if (dashboardGoals.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "grid grid-cols-1 gap-4 mb-8",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "bg-blue-50 border border-blue-200 rounded-lg p-6 text-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Target, {
                                className: "h-12 w-12 text-blue-600 mx-auto mb-4"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                className: "text-lg font-semibold text-blue-900 mb-2",
                                children: "Set Up Your Dashboard Goals"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-blue-700 mb-4",
                                children: "Choose up to 3 goals to track as key metrics on your dashboard."
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                onClick: ()=>setShowGoalSelector(true),
                                className: "bg-blue-600 hover:bg-blue-700",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Target, {
                                        className: "h-4 w-4 mr-2"
                                    }),
                                    "Choose Dashboard Goals"
                                ]
                            })
                        ]
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_DashboardGoalSelector.DashboardGoalSelector, {
                    open: showGoalSelector,
                    onOpenChange: setShowGoalSelector
                })
            ]
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between mb-4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                        className: "text-lg font-semibold text-gray-900",
                        children: "Key Metrics"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                        variant: "outline",
                        size: "sm",
                        onClick: ()=>setShowGoalSelector(true),
                        className: "text-gray-600 hover:text-gray-900",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Settings, {
                                className: "h-4 w-4 mr-2"
                            }),
                            "Manage Goals"
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "grid grid-cols-1 md:grid-cols-3 gap-4 mb-8",
                children: dashboardGoals.slice(0, 3).map((goal, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(GoalMetricCard, {
                        goal: goal,
                        unit: preferences.distance,
                        priority: index + 1
                    }, goal.id))
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_DashboardGoalSelector.DashboardGoalSelector, {
                open: showGoalSelector,
                onOpenChange: setShowGoalSelector
            })
        ]
    });
}
function GoalMetricCard({ goal, unit, priority }) {
    const progress = calculateGoalProgress(goal);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow p-6",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                className: "text-sm font-medium text-gray-600 flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                        className: "bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full",
                                        children: [
                                            "#",
                                            priority
                                        ]
                                    }),
                                    goal.goal_type?.display_name
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-3xl font-bold text-gray-900",
                                children: formatGoalValue(progress.current, goal, unit)
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex items-center justify-center w-12 h-12 bg-blue-100 rounded-full",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "text-xl",
                            children: getGoalIcon(goal.goal_type?.category)
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mt-4 space-y-1",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex justify-between text-sm",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-gray-600",
                                children: "Target"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "font-medium",
                                children: formatGoalValue(goal.target_value || 0, goal, unit)
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex justify-between text-sm",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-gray-600",
                                children: "Progress"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: `font-medium ${getProgressColor(progress.percentage)}`,
                                children: [
                                    progress.percentage.toFixed(1),
                                    "%"
                                ]
                            })
                        ]
                    }),
                    goal.time_period !== 'ongoing' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex justify-between text-sm",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-gray-600",
                                children: "Time left"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-gray-600",
                                children: calculateTimeRemaining(goal)
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "w-full bg-gray-200 rounded-full h-2 mt-2",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: `h-2 rounded-full transition-all duration-300 ${getProgressBarColor(progress.percentage)}`,
                            style: {
                                width: `${Math.min(100, progress.percentage)}%`
                            }
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "text-xs text-gray-500 mt-2",
                        children: getProgressMessage(progress)
                    })
                ]
            })
        ]
    });
}
// Helper functions
function calculateGoalProgress(goal) {
    const current = goal.current_progress || 0;
    const target = goal.target_value || 1;
    const percentage = current / target * 100;
    return {
        current,
        target,
        percentage,
        remaining: Math.max(0, target - current)
    };
}
function formatGoalValue(value, goal, unit) {
    const category = goal.goal_type?.category;
    switch(category){
        case 'distance':
            return (0, _utils.formatDistance)(value * 1000, unit) // Convert to meters for formatDistance
            ;
        case 'frequency':
            return `${Math.round(value)} runs`;
        case 'pace':
            const minutes = Math.floor(value / 60);
            const seconds = Math.round(value % 60);
            return `${minutes}:${seconds.toString().padStart(2, '0')}`;
        case 'duration':
            const hours = Math.floor(value / 60);
            const mins = Math.round(value % 60);
            return hours > 0 ? `${hours}h ${mins}m` : `${mins}m`;
        default:
            return `${value.toFixed(1)}`;
    }
}
function getGoalIcon(category) {
    switch(category){
        case 'distance':
            return '📏';
        case 'pace':
            return '⚡';
        case 'frequency':
            return '🔄';
        case 'duration':
            return '⏱️';
        case 'elevation':
            return '⛰️';
        case 'heart_rate':
            return '❤️';
        case 'event':
            return '🏁';
        default:
            return '🎯';
    }
}
function getProgressColor(percentage) {
    if (percentage >= 100) return 'text-green-600';
    if (percentage >= 80) return 'text-blue-600';
    if (percentage >= 50) return 'text-orange-600';
    return 'text-red-600';
}
function getProgressBarColor(percentage) {
    if (percentage >= 100) return 'bg-green-500';
    if (percentage >= 80) return 'bg-blue-500';
    if (percentage >= 50) return 'bg-orange-500';
    return 'bg-red-500';
}
function calculateTimeRemaining(goal) {
    if (!goal.target_date) {
        return goal.time_period === 'weekly' ? 'This week' : 'This month';
    }
    const targetDate = new Date(goal.target_date);
    const now = new Date();
    const diffTime = targetDate.getTime() - now.getTime();
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    if (diffDays < 0) return 'Overdue';
    if (diffDays === 0) return 'Today';
    if (diffDays === 1) return '1 day';
    if (diffDays < 7) return `${diffDays} days`;
    if (diffDays < 30) return `${Math.ceil(diffDays / 7)} weeks`;
    return `${Math.ceil(diffDays / 30)} months`;
}
function getProgressMessage(progress) {
    const percentage = progress.percentage;
    if (percentage >= 100) return '🎉 Goal achieved!';
    if (percentage >= 80) return '🔥 Almost there!';
    if (percentage >= 50) return '💪 Keep it up!';
    if (percentage >= 25) return '📈 Good progress!';
    return '🚀 Just getting started!';
}
function KeyMetricsSkeleton() {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "grid grid-cols-1 md:grid-cols-3 gap-4 mb-8",
        children: [
            1,
            2,
            3
        ].map((i)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "bg-white rounded-lg shadow p-6",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "animate-pulse",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "h-4 bg-gray-200 rounded w-20 mb-2"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "h-8 bg-gray-200 rounded w-16"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "w-12 h-12 bg-gray-200 rounded-full"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "mt-4",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "h-4 bg-gray-200 rounded w-24"
                            })
                        })
                    ]
                })
            }, i))
    });
}

//# sourceMappingURL=data:application/json;base64,